apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-deployment
spec:
  selector:
    matchLabels:
      app: front
  replicas: 2 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: front
    spec:
      containers:
      - name: frontend
        image: tellebma/frontend:latest
        ports:
        - containerPort: 4200
        volumeMounts:
          - name:  frontend-volume
            mountPath:  /usr/share/nginx/html/assets/config.json
            subPath: file-frontend-config
      volumes:
        - name:  frontend-volume
          configMap:
            name: config-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: back-deployment
spec:
  selector:
    matchLabels:
      app: back
  replicas: 2 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: back
    spec:
      containers:        
      - name: backend
        image: tellebma/backend:latest
        ports:
        - containerPort: 8080
        
        env:
        - name: JDBC_URL
          value: "bdd-service"
        - name: JDBC_PORT
          value: "5432"
        - name: JDBC_DB
          value: "jcorporation"
        - name: JDBC_USER
          value: "jcorporation"
        - name: JDBC_PASSWORD
          value: "jcorporation"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bdd-deployment
spec:
  selector:
    matchLabels:
      app: bdd
  replicas: 2 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: bdd
    spec:
      containers:
      - name: database
        image: postgres:latest
        env:
        - name: POSTGRES_PASSWORD
          value: "jcorporation"
        - name: POSTGRES_USER
          value: "jcorporation"
        - name: POSTGRES_DB
          value: "jcorporation"
---
kind: Service
apiVersion: v1
metadata:
  name: front-service
spec:
  selector:
    app: front
  ports:
    - port: 80
---
kind: Service
apiVersion: v1
metadata:
  name: back-service
spec:
  selector:
    app: back
  ports:
    - port: 8080 
---
kind: Service
apiVersion: v1
metadata:
  name: bdd-service
spec:
  selector:
    app: bdd
  ports:
    - port: 5432 
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: front-ingress
spec:
  tls:
  rules:
  - host: metra-bellet-ns.k8s.granux.fr
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: front-service
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: back-ingress
spec:
  tls:
  rules:              
  - host: metra-bellet-ns-backend.k8s.granux.fr
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: back-service
            port:
              number: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-volume
  labels:
    app: config-volume
  namespace: metra-bellet-ns
data:
  file-frontend-config: |
    {
      "apiUrl": "https://metra-bellet-ns-backend.k8s.granux.fr",
      "mock": {
        "enabled": true,
        "url": "http://metra-bellet-ns-backend.k8s.granux.fr:8090"
      }
    }
  

